name: CI
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
jobs:
  commits:
    name: Commits
    if: ${{ github.ref != 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  typecheck:
    name: Type check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: mrcjkb/lua-typecheck-action@v0
        with:
          directories: lua
          configpath: ".luarc.json"
  selene:
    name: Selene
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: cargo-bins/cargo-binstall@main
      - name: Selene
        run: |
          cargo binstall  --no-confirm selene
          selene --config selene.toml ./lua
  code_format:
    name: Code Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: JohnnyMorganz/stylua-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: latest
          args: --config-path .stylua.toml ./lua
      - name: Auto commit
        if: ${{ github.ref != 'refs/heads/main' }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(pr): auto-commit"
  ubuntu_installer:
    name: Ubuntu Installer
    runs-on: ubuntu-latest
    steps:
      - uses: dtolnay/rust-toolchain@stable
        if: ${{ github.ref != 'refs/heads/main' }}
      - uses: cargo-bins/cargo-binstall@main
        if: ${{ github.ref != 'refs/heads/main' }}
      - name: Install Cargo Commands
        if: ${{ github.ref != 'refs/heads/main' }}
        run: |
          cargo binstall --no-confirm fd-find
          cargo binstall --no-confirm ripgrep
          cargo binstall --no-confirm bat
          cargo binstall --no-confirm eza
      - name: Get branch
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch
      - name: Install lin.nvim
        run: |
          set -x
          echo '${{ steps.extract_branch.outputs.branch }}'
          export BRANCH_NAME=${{ steps.extract_branch.outputs.branch }}
          export PATH="$PATH:$HOME/.cargo/bin"
          sudo sh -c "export PATH=$PATH && git clone --single-branch --branch $BRANCH_NAME --depth=1 https://github.com/linrongbin16/lin.nvim ~/.nvim && cd ~/.nvim && bash -euxo pipefail ./install"
  macos_installer:
    name: MacOS Installer
    runs-on: macos-latest
    steps:
      - uses: Homebrew/actions/setup-homebrew@master
      - uses: dtolnay/rust-toolchain@stable
        if: ${{ github.ref != 'refs/heads/main' }}
      - name: Install Cargo Commands
        if: ${{ github.ref != 'refs/heads/main' }}
        run: |
          brew install cargo-binstall
          cargo binstall --no-confirm fd-find
          cargo binstall --no-confirm ripgrep
          cargo binstall --no-confirm bat
          cargo binstall --no-confirm eza
      - name: Get branch
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch
      - name: Install lin.nvim
        shell: bash
        run: |
          set -x
          echo '${{ steps.extract_branch.outputs.branch }}'
          echo ${{ steps.extract_branch.outputs.branch }}
          export HOMEBREW_NO_AUTO_UPDATE=1
          export HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK=1
          git clone --single-branch --branch ${{ steps.extract_branch.outputs.branch }} --depth=1 https://github.com/linrongbin16/lin.nvim ~/.nvim && cd ~/.nvim && bash -euxo pipefail ./install
  release:
    name: Release
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - typecheck
      - selene
      - code_format
      - ubuntu_installer
      - macos_installer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: simple
          package-name: lin.nvim
